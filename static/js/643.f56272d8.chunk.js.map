{"version":3,"file":"static/js/643.f56272d8.chunk.js","mappings":"oOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAGtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,IAEIC,EAAAA,EAAAA,IACnC,CAACN,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAE,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASL,EAAOI,cADf,GAG/B,I,yDCVUE,EAAgBC,EAAAA,GAAAA,KAAH,8VAWbC,EAAUD,EAAAA,GAAAA,OAAH,kSAiBPE,EAAYF,EAAAA,GAAAA,MAAH,uGAMTG,EAAaH,EAAAA,GAAAA,MAAH,8G,SClBR,SAASI,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXpB,GAAWqB,EAAAA,EAAAA,IAAYvB,GAuBvBwB,EAAY,WAChBN,EAAQ,IACRE,EAAU,GACT,EAEGK,EAA0B,SAAAC,GAC9B,MAAwBA,EAAEC,OAAlBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAEd,OAAQpB,GACN,IAAK,OACHU,EAAQU,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MAEF,QACE,OAEL,EAGD,OACW,UAACjB,EAAD,CACHkB,SA3Cc,SAAAH,GACnBA,EAAEI,iBAEF,IAAMvB,EAAU,CAAEwB,IAAIC,EAAAA,EAAAA,MAAUxB,KAAAA,EAAMW,OAAAA,GAElCjB,EAAS+B,MAAK,qBAAGzB,KAAoCC,gBAAkBD,EAAKC,aAA9D,IAChByB,IAAAA,OAAAA,QAAA,kBACa1B,EADb,sCAMFa,GAASc,EAAAA,EAAAA,IACP5B,IAGCiB,IACH,EAyBQ,WAGH,SAACV,EAAD,CACEsB,QAAS5B,EADX,UAGF,SAACO,EAAD,CACIsB,KAAK,OACHT,MAAOpB,EACP8B,SAAUb,EAEZjB,KAAK,OACL+B,QAAQ,yHACRC,MAAM,yIACRC,UAAQ,EACPC,YAAY,cAGX,SAAC5B,EAAD,CACFsB,QAASjB,EADP,UAIJ,SAACJ,EAAD,CACMsB,KAAK,MAELT,MAAOT,EACPmB,SAAUb,EACVjB,KAAK,SACL+B,QAAQ,yFACRC,MAAM,+FACVC,UAAQ,EACRC,YAAY,gBAIZ,SAAC7B,EAAD,CAEEwB,KAAK,SAFP,SAEgB,kBAIzB,C,8BC7GYM,EAAkB/B,EAAAA,GAAAA,IAAH,0BAGfgC,EAAehC,EAAAA,GAAAA,MAAH,+XAYZiC,EAAcjC,EAAAA,GAAAA,MAAH,sHCPT,SAASkC,IAEpB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXjB,GAASkB,EAAAA,EAAAA,IAAYnB,GAM3B,OACI,SAACuC,EAAD,WACA,UAACC,EAAD,CACIP,KAAK,OACLT,MAAOvB,EACPiC,SATS,SAAAZ,GACbL,GAAS0B,EAAAA,EAAAA,GAAUrB,EAAEC,OAAOC,MAAMoB,QACrC,EAIG,UAIK,yBACD,SAACH,EAAD,QAIX,CC5BM,I,QAAMI,EAAYrC,EAAAA,GAAAA,IAAH,iEAITsC,EAActC,EAAAA,GAAAA,GAAH,oZAaXuC,EAAcvC,EAAAA,GAAAA,GAAH,yLAQXwC,EAAcxC,EAAAA,GAAAA,EAAH,iGAKXyC,EAAUzC,EAAAA,GAAAA,OAAH,qTCwBpB,EAxCoB,WAEhB,IAAMV,GAAWqB,EAAAA,EAAAA,IAAYvB,GACvBsD,GAAY/B,EAAAA,EAAAA,IAAYnB,GAExBiB,GAAWC,EAAAA,EAAAA,OAEjBiC,EAAAA,EAAAA,YAAU,WACNlC,GAASmC,EAAAA,EAAAA,MACZ,GAAE,CAACnC,IAGF,IAAMoC,EAAkBvD,EAASG,QAAO,SAAAE,GAAO,OACjDA,EAAQC,KAAKC,cAAcC,SAAS4C,EAAU7C,cADG,IAKjD,OACQ,SAACwC,EAAD,WACM,SAACC,EAAD,UACLO,EAAgBC,KACb,gBAAGlD,EAAH,EAAGA,KAAMuB,EAAT,EAASA,GAAIZ,EAAb,EAAaA,OAAb,OACK,UAACgC,EAAD,YAED,UAACC,EAAD,WACK5C,EAAK,KAAGW,MAET,SAACkC,EAAD,CACI7C,KAAK,SACLmD,QAAS,kBAAMtC,GAASuC,EAAAA,EAAAA,IAAc7B,GAA7B,EAFb,SAEiD,aAN5CA,EAFb,OAiBf,ECnDY8B,EAAoBjD,EAAAA,GAAAA,IAAH,oLAQjBkD,EAAiBlD,EAAAA,GAAAA,GAAH,6BAIdmD,EAAgBnD,EAAAA,GAAAA,GAAH,oGAMZ+B,EAAkB/B,EAAAA,GAAAA,IAAH,wBCM7B,EAtBsB,WAElB,OACI,+BACI,UAACiD,EAAD,YACI,SAACC,EAAD,UAAgB,eAGhB,SAAC9C,EAAD,KAEA,UAAC,EAAD,YACI,SAAC+C,EAAD,UAAe,cACf,SAACjB,EAAD,KACA,SAAC,EAAD,WAOnB,C","sources":["components/redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContainList.module.jsx","components/ContactList/ContactList.jsx","components/Views/ContactsView/ContactsView.styled.js","components/Views/ContactsView/ContactsView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from 'styled-components';\n\n\nexport const FormPhonebook = styled.form`\n    width: 350px;\n    border: 1px solid black;\n    border-radius: 10px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n    display: flex;\n    flex-direction: column;\n    background-color: rgb(120, 203, 235);\n    border: none;\n`;\n\nexport const FormBtn = styled.button`\n    align-items: center;\n    margin: 10px;\n    border-radius: 20px;\n    background-color: #fff;\n    border: none;\n    font-weight: 500;\n   \n\n    &:hover {\n    background-color: rgb(158, 232, 241);\n    color: #ffff;\n    border-color: revert  ;\n    }\n  \n`;\n\nexport const LabelName = styled.label`\n margin: 10px;\n    border-radius: 7px;\n    margin: auto;\n    border: none;\n`;\nexport const InputlName = styled.input`\n    border-radius: 5px;\n    margin: auto;\n    margin-top: 10px;\n    border: none;\n`;\n\n// .formBtn { \n//     margin-top: 10px;\n//     margin-bottom: 10px;\n//     cursor: pointer;\n// }\n\n// .input_style{\n//     border-radius: 5px;\n//     margin: auto;\n//     margin-top: 10px;\n   \n// }\n\n// .formBtn:hover {\n//     background-color: rgb(235, 181, 120);\n//     color: rgb(255, 255, 255);\n// }","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {selectContacts} from '../redux/selectors'\nimport {addContact} from '../redux/operations';\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormPhonebook,\n  FormBtn,\n  LabelName,\n  InputlName\n} from './ContactForm.styled';\n\n\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n\n  \n   const handleSubmit = e => {\n     e.preventDefault();\n\n     const contact = { id: nanoid(), name, number };\n     \n     if (contacts.find(({ name: contactName }) => contactName.toLowerCase() === name.toLowerCase())) {\n       Notiflix.Notify.warning(\n         `Conatct ${name} is already in your cotacts list`\n       );\n       return;\n    }\n\n     dispatch(addContact(\n       contact\n     ));\n\n        resetForm();\n    };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n    };\n  \n  const handleChangeAddContacts = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break;\n      case 'number':\n        setNumber(value)\n        break;\n\n      default:\n        return;\n    }\n  };\n  \n  \n  return ( \n             <FormPhonebook\n          onSubmit={handleSubmit}\n        >\n          <LabelName\n            htmlFor={name}\n          >\n        <InputlName\n            type=\"text\"\n              value={name}\n              onChange={handleChangeAddContacts}\n              // id={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n           placeholder=\" Name \"\n          />\n          </LabelName>\n            <LabelName\n          htmlFor={number}\n          >\n           \n        <InputlName\n              type=\"tel\"\n              // id={number}\n              value={number}\n              onChange={handleChangeAddContacts}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\" Number \"\n            />\n          </LabelName>\n          \n          <FormBtn\n\n            type=\"submit\">Add contact</FormBtn>  \n        </FormPhonebook>\n         );\n  \n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n\n`;\nexport const FindContacts = styled.label`\n  display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n    padding-bottom: 5px;\n    border-radius: 15px;\n    background-color: rgb(120, 203, 235);\n    border: none;\n\n`;\nexport const FilterInput = styled.input`\n    border-radius: 7px;\n    margin-bottom: 10px;\n    margin-top: 10px;\n     border: none;\n`;\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setFilter } from '../redux/filterSlise';\nimport { selectFilter } from '../redux/selectors';\nimport {\n    FilterContainer,\n    FindContacts,\n    FilterInput\n} from './Filter.styled';\n\nexport default function Filter() {\n    \n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const onChange = e => {\n        dispatch(setFilter(e.target.value.trim()))\n    };\n\n    return (\n        <FilterContainer>\n        <FindContacts\n            type='name'\n            value={filter}\n            onChange={onChange}\n            >Find contacts by name\n            <FilterInput  />\n        </FindContacts> \n        </FilterContainer>      \n    )\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    border:none;\n    margin-top: 25px;\n`;\nexport const ContainList = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    /* border: 1px solid #000000; */\n    padding: 20px;\n    border-radius: 6px;\n    list-style: none;\n    background-color: rgb(120, 203, 235);\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, \n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, \n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\nexport const ContainItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    background-color: #FFFFFF;\n    padding: 10px;\n    border-radius: 10px;\n    margin-bottom: 10px;\n`;\nexport const ContainText = styled.p`\n    margin-top: 16px;\n    text-align: center;\n    padding-right: 5px;\n`;\nexport const BtnList = styled.button`\n    cursor: pointer;\n    width: 100px;\n    font-weight: bold;\n    color: #000000;\n    border: 1px solid #000000;\n    border-radius: 15px;\n    background: #ffffff;\n    cursor: pointer;\n\n    &:hover {\n    background-color: rgb(245, 58, 52);\n    color: rgb(255, 255, 255);\n}\n`;\n\n\n\n// .list{\n//     display: flex;\n//     justify-content: center;\n//     flex-direction: column;\n//     border: 1px solid #000000;\n//     padding: 20px;\n//     border-radius: 6px;\n//     list-style: none;\n//     background-color: #f1f5b1;\n//     box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n// }\n\n// .btn{\n//     /* text-decoration: none; */\n//     cursor: pointer;\n//     width: 90px;\n//     font-weight: bold;\n//     color: #000000;\n//     border: 1px solid #000000;\n//     border-radius: 25px;\n//     background: #ffffff;\n//     cursor: pointer;\n// }\n\n// .btn:hover {\n//     background-color: rgb(235, 181, 120);\n//     color: rgb(255, 255, 255);\n// }\n\n// .Btn_list {\n//     background: #267bef;\n//     color: #FFFFFF;\n//     border: none;\n//     border-radius: 20px;\n    \n// }\n\n// .item {\n//     display: flex;\n//     justify-content: space-between;\n//     background-color: #FFFFFF;\n//     border: 1px solid #000000;\n//     padding: 10px;\n//     border-radius: 10px;\n//     margin-bottom: 5px;\n    \n// }","import { useEffect } from 'react'; \n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {selectContacts, selectFilter} from '../redux/selectors'\nimport {deleteContact, fetchContacts} from '../redux/operations';\nimport {\n    Container,\n    ContainList,\n    ContainItem,\n    ContainText,\n    BtnList,\n\n} from './ContainList.module';\n\n\nconst ContactList = () => {\n\n    const contacts = useSelector(selectContacts);\n    const getFilter = useSelector(selectFilter);\n    \n    const dispatch = useDispatch();\n  \n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    \n\n      const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(getFilter.toLowerCase())\n  );\n \n\n    return (\n            <Container>\n                  <ContainList>\n            {visibleContacts.map(\n                ({ name, id, number }) => (\n                     <ContainItem\n                        key={id}>\n                    <ContainText>\n                        {name}: {number}\n                    </ContainText>\n                        <BtnList\n                            name='delete'\n                            onClick={() => dispatch(deleteContact(id)) }>\n                            delete\n                        </BtnList>\n                    </ContainItem>\n                )\n            )}\n        </ContainList>\n            </Container>          \n    )\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\n\nexport const ContactsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /* margin-left: 10px; */\n    margin: 0 auto;\n`;\nexport const PhonebookTitle = styled.h2`\n   \n`;\n\nexport const ContactsTitle = styled.h2`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const  FilterContainer = styled.div`\n`;","import ContactForm  from '../../ContactForm/ContactForm';\nimport  Filter  from '../../Filter/Filter';\nimport  ContactList  from '../../ContactList/ContactList';\nimport {ContactsContainer, PhonebookTitle, ContactsTitle, FilterContainer} from './ContactsView.styled';\n\n const ContactsView = () => {\n\n    return (\n        <>\n            <ContactsContainer>\n                <PhonebookTitle>\n                    Phonebook\n                </PhonebookTitle>\n                <ContactForm />\n        \n                <FilterContainer>\n                    <ContactsTitle>Contacts</ContactsTitle>\n                    <Filter />\n                    <ContactList\n                    />\n         \n                </FilterContainer>\n            </ContactsContainer>\n        </>\n    )\n};\n\nexport default ContactsView;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","createSelector","contact","name","toLowerCase","includes","FormPhonebook","styled","FormBtn","LabelName","InputlName","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","resetForm","handleChangeAddContacts","e","target","value","onSubmit","preventDefault","id","nanoid","find","Notiflix","addContact","htmlFor","type","onChange","pattern","title","required","placeholder","FilterContainer","FindContacts","FilterInput","Filter","setFilter","trim","Container","ContainList","ContainItem","ContainText","BtnList","getFilter","useEffect","fetchContacts","visibleContacts","map","onClick","deleteContact","ContactsContainer","PhonebookTitle","ContactsTitle"],"sourceRoot":""}